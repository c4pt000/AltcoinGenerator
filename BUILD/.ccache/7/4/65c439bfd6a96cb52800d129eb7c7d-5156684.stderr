rest.cpp: In function 'bool rest_getutxos(HTTPRequest*, const string&)':
rest.cpp:462:73: warning: this statement may fall through [-Wimplicit-fallthrough=]
         strRequestMutable.assign(strRequestV.begin(), strRequestV.end());
                                                                         ^
rest.cpp:465:5: note: here
     case RF_BINARY: {
     ^~~~
In file included from chain.h:13,
                 from rest.cpp:6:
tinyformat.h: In function 'const char* tinyformat::detail::streamStateFromFormat(std::ostream&, bool&, int&, const char*, const tinyformat::detail::FormatArg*, int&, int)':
tinyformat.h:707:21: warning: this statement may fall through [-Wimplicit-fallthrough=]
             out.setf(std::ios::uppercase);
             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
tinyformat.h:708:9: note: here
         case 'x': case 'p':
         ^~~~
tinyformat.h:713:21: warning: this statement may fall through [-Wimplicit-fallthrough=]
             out.setf(std::ios::uppercase);
             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
tinyformat.h:714:9: note: here
         case 'e':
         ^~~~
tinyformat.h:719:21: warning: this statement may fall through [-Wimplicit-fallthrough=]
             out.setf(std::ios::uppercase);
             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
tinyformat.h:720:9: note: here
         case 'f':
         ^~~~
tinyformat.h:724:21: warning: this statement may fall through [-Wimplicit-fallthrough=]
             out.setf(std::ios::uppercase);
             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
tinyformat.h:725:9: note: here
         case 'g':
         ^~~~
